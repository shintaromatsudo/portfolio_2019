{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { CHANGE_TITLE, CHANGE_CONTENT, INITIALIZE_FORM } from './actions';\nvar initialState = {\n  form: {\n    title: '',\n    content: ''\n  },\n  blogs: {\n    isFetching: false,\n    blogArray: []\n  }\n};\n\nvar formReducer = function formReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.form;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_TITLE:\n      return _objectSpread({}, state, {\n        title: action.title\n      });\n\n    case CHANGE_CONTENT:\n      return _objectSpread({}, state, {\n        content: action.content\n      });\n\n    case INITIALIZE_FORM:\n      return initialState.form;\n\n    default:\n      return state;\n  }\n};\n\nvar blogsReducer = function blogsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.blogs;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return true;\n  }\n};\n\nvar rootReducer = combineReducers({\n  form: formReducer,\n  blogs: blogsReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/shintaromatsudo/Shintaro/portfolio/web/reducers.js"],"names":["combineReducers","CHANGE_TITLE","CHANGE_CONTENT","INITIALIZE_FORM","initialState","form","title","content","blogs","isFetching","blogArray","formReducer","state","action","type","blogsReducer","rootReducer"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,eAAvC,QAA8D,WAA9D;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,OAAO,EAAE;AAFL,GADa;AAKnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,KADP;AAELC,IAAAA,SAAS,EAAE;AAFN;AALY,CAArB;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BR,YAAY,CAACC,IAAiB;AAAA,MAAXQ,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,YAAL;AACE,+BACKW,KADL;AAEEN,QAAAA,KAAK,EAAEO,MAAM,CAACP;AAFhB;;AAIF,SAAKJ,cAAL;AACE,+BACKU,KADL;AAEEL,QAAAA,OAAO,EAAEM,MAAM,CAACN;AAFlB;;AAIF,SAAKJ,eAAL;AACE,aAAOC,YAAY,CAACC,IAApB;;AACF;AACE,aAAOO,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAwC;AAAA,MAAvCH,KAAuC,uEAA/BR,YAAY,CAACI,KAAkB;AAAA,MAAXK,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAO,IAAP;AAFJ;AAID,CALD;;AAOA,IAAME,WAAW,GAAGhB,eAAe,CAAC;AAClCK,EAAAA,IAAI,EAAEM,WAD4B;AAElCH,EAAAA,KAAK,EAAEO;AAF2B,CAAD,CAAnC;AAKA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport { CHANGE_TITLE, CHANGE_CONTENT, INITIALIZE_FORM } from './actions'\n\nconst initialState = {\n  form: {\n    title: '',\n    content: ''\n  },\n  blogs: {\n    isFetching: false,\n    blogArray: []\n  }\n}\n\nconst formReducer = (state = initialState.form, action) => {\n  switch (action.type) {\n    case CHANGE_TITLE:\n      return {\n        ...state,\n        title: action.title\n      }\n    case CHANGE_CONTENT:\n      return {\n        ...state,\n        content: action.content\n      }\n    case INITIALIZE_FORM:\n      return initialState.form\n    default:\n      return state\n  }\n}\n\nconst blogsReducer = (state = initialState.blogs, action) => {\n  switch (action.type) {\n    default:\n      return true\n  }\n}\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  blogs: blogsReducer\n})\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}